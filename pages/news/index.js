import { useState, useEffect } from 'react';
import Head from 'next/head';
import BlogPostPreview from '../../components/BlogPostPreview';
import { getAllPublished } from '../../utilities/directus';

export default function BlogPosts({blog_posts}) {
  // paginate the blog posts
  const [page, setPage] = useState(1);
  const [total_pages, setTotalPages] = useState(0);
  const [pageSlice, setPageSlice] = useState([]);

  const numPostsPerPage = 5;
  const numPosts = blog_posts.length;

  const handlePageChange = (value) => {
    if (value < 1) {
      value = 1;
    } else if (value > total_pages) {
      value = total_pages;
    }

    setPage(value);
  };

  useEffect(() => {
    const totalPages = Math.ceil(numPosts / numPostsPerPage);
    const start = (page - 1) * numPostsPerPage;
    const end = start + numPostsPerPage;
    setTotalPages(totalPages);
    setPageSlice(blog_posts.slice(start, end));
  }, [page]);

  return (
    <>
      <Head>
        <title>SRBlog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section>
        <h1 className="container mx-auto mt-4 mb-4 border-b-2 px-8 font-headings text-4xl font-black text-secondary sm:px-20">
          News Posts
        </h1>
        {pageSlice.map((post, index) => (
          <BlogPostPreview key={index} post={post} />
        ))}

        <div className="mt-4 flex justify-center">
          <button
            id="prev"
            disabled={page === 1}
            className="rounded-l bg-primary py-2 px-4 font-bold text-white disabled:bg-secondary"
            onClick={() => handlePageChange(page - 1)}
          >
            Prev
          </button>
          <button
            id="next"
            disabled={page === total_pages}
            className="rounded-r bg-primary py-2 px-4 font-bold text-white disabled:bg-secondary"
            onClick={() => handlePageChange(page + 1)}
          >
            Next
          </button>
        </div>

        <div className="mt-4 flex justify-center">
          <p className="text-center">
            Page {page} of {total_pages}
          </p>
        </div>

        {/* show links to each page */}
        <div className="my-4 flex justify-center">
          {Array.from({ length: total_pages }, (_, i) => (
            <button
              key={i}
              className={`mx-1 py-2 px-4 font-black text-primary outline ${
                page === i + 1 ? 'text-secondary' : ''
              }`}
              onClick={() => setPage(i + 1)}
            >
              {i + 1}
            </button>
          ))}
        </div>
      </section>
    </>
  );
}

export const getStaticProps = async () => {
  const data = await getAllPublished();
  return {
    props: {
      blog_posts: data.data.blog_posts,
    },

    revalidate: 60,
  };
};
